generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @unique @default(uuid())
  name        String
  email       String    @unique
  password    String    @db.Text
  is_verified Boolean   @default(false)
  role        Role
  profile     Profile?
  bookings    Booking[]
  orders      Order[]
}

model Profile {
  id      String  @id @default(uuid())
  address String? @db.Text
  city    String? @db.Text
  state   String? @db.Text
  phone   String
  pincode String?
  user    User    @relation(fields: [userId], references: [id])
  userId  String  @unique
}

model Products {
  id           String      @id @default(uuid())
  name         String      @db.Text
  description  String?     @db.Text
  price        Int
  image_url    String
  image_id     String
  category     String
  ratings      Int
  orderItems   OrderItem[]
  is_featured  Boolean
  is_available Boolean

  @@index([category])
}

model Booking {
  id             String   @id @default(uuid())
  name           String   @db.Text
  timing         BigInt
  size           Int
  phone          String
  occasion       String?  @db.Text
  specialrequest String?  @db.Text
  isCancelled    Boolean  @default(false)
  userId         String
  user           User     @relation(fields: [userId], references: [id])
  createdAt      DateTime @default(now())

  @@index([userId])
}

model Order {
  id                  String      @id @default(uuid())
  totalPrice          Int
  isPaid              Boolean     @default(false)
  name                String
  phone               String
  address             String
  city                String
  state               String
  pincode             String
  order_status        String
  order_time          DateTime    @default(now())
  razorpay_order_id   String
  razorpay_payment_id String
  userId              String
  user                User        @relation(fields: [userId], references: [id])
  orderItems          OrderItem[]
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  productId String
  product   Products @relation(fields: [productId], references: [id])
  quantity  Int      @default(1)

  @@index([orderId])
  @@index([productId])
}

enum Role {
  ADMIN
  USER
}
